%{
    #include <stdlib.h>
    #include "parser.tab.h"

    int linenr = 1;
%}

DIGIT    [0-9]

%%

"N"                             { return N; }
"K"                             { return K; }
"maxWeight"                     { return MAXWEIGHT; }
"exploreCoeff"                  { return EXPLORE_COEFF; }
"depthCoeff"                    { return DEPTH_COEFF; }
"numSearches"                   { return NUM_SEARCHES; }
"numGames"                      { return NUM_GAMES; }
"experimentRuns"                { return EXPERIMENT_RUNS; }
"enableSharedMemory"            { return ENABLE_SHARED_MEMORY; }
"enableVerbatim"                { return ENABLE_VERBATIM; }
"numThreads"                    { return NUM_THREADS; }

"enableActionSpaceSplitting"    { return ENABLE_ACTION_SPACE_SPLITTING; }
"splittingCol"                  { return SPLITTING_COL; }
"leftWeight"                    { return LEFT_WEIGHT; }
"rightWeight"                   { return RIGHT_WEIGHT; }

"enableHighscore"               { return HIGHSCORE; }

"heatingRate"                   { return HEATING_RATE; }
"heatingColumnLimit"            { return HEATING_COLUMN_LIMIT; }

"="                     { return SEPARATOR; }

{DIGIT}+                { yylval.ival = atoi(yytext); return INTNUMBER;  }
{DIGIT}+"."{DIGIT}+     { yylval.dval = atof(yytext); return REALNUMBER; }

[Tt][Rr][Uu][Ee]                { yylval.ival = 1; return INTNUMBER; }
[Ff][Aa][Ll][Ss][Ee]            { yylval.ival = 0; return INTNUMBER; }
[Dd][Ee][Ff][Aa][Uu][Ll][Tt]    { yylval.ival = 0.0; return REALNUMBER; }

"{"[^}]*"}"     { /* eat comments */     }
"["[^]]*"]"     { /* eat comments */     }

[ \r\t]+        { /* eat white spaces */ }
\n              { linenr++;              }

.           {
              fprintf(stderr, "Unrecognized character '%c' in line %d.\n", *yytext, linenr);
              exit(EXIT_SUCCESS);
            }

%%

void setScannerInput(char *input) {
    yy_scan_string(input);
}

void finalizeScanner() {
    yylex_destroy();
}